$> ls -la
We have an executable level13
level13@SnowCrash:~$ ./level13 
UID 2013 started us but we we expect 4242


$> strings level13
strdup
printf
getuid
__libc_start_main
GLIBC_2.0
PTRh`
UWVS
[^_]
0123456
UID %d started us but we we expect %d
boe]!ai0FB@.:|L6l@A?>qJ}I
your token is %s
;*2$"$

We can see that it does a getuid, which is equal to 2013.
level13@SnowCrash:~$ id
uid=2013(level13) gid=2013(level13) groups=2013(level13),100(users)
-> it corresponds to the uid of user "level13"

level13@SnowCrash:~$ usermod -u 4242 level13
usermod: user level13 is currently logged in

Not working, let's try gdb
$> gdb level13
$> break getuid //set a breakpoint where getuid is called
$> disas main
(gdb) disas main
Dump of assembler code for function main:
   0x0804858c <+0>:	push   %ebp
   0x0804858d <+1>:	mov    %esp,%ebp
   0x0804858f <+3>:	and    $0xfffffff0,%esp
   0x08048592 <+6>:	sub    $0x10,%esp
   0x08048595 <+9>:	call   0x8048380 <getuid@plt>
   0x0804859a <+14>:	cmp    $0x1092,%eax
   0x0804859f <+19>:	je     0x80485cb <main+63>
   0x080485a1 <+21>:	call   0x8048380 <getuid@plt>
   0x080485a6 <+26>:	mov    $0x80486c8,%edx
   0x080485ab <+31>:	movl   $0x1092,0x8(%esp)
   0x080485b3 <+39>:	mov    %eax,0x4(%esp)
   0x080485b7 <+43>:	mov    %edx,(%esp)
   0x080485ba <+46>:	call   0x8048360 <printf@plt>
   0x080485bf <+51>:	movl   $0x1,(%esp)
   0x080485c6 <+58>:	call   0x80483a0 <exit@plt>
   0x080485cb <+63>:	movl   $0x80486ef,(%esp)
   0x080485d2 <+70>:	call   0x8048474 <ft_des>
   0x080485d7 <+75>:	mov    $0x8048709,%edx
   0x080485dc <+80>:	mov    %eax,0x4(%esp)
   0x080485e0 <+84>:	mov    %edx,(%esp)
   0x080485e3 <+87>:	call   0x8048360 <printf@plt>
   0x080485e8 <+92>:	leave  
   0x080485e9 <+93>:	ret    
End of assembler dump.

Let's print the registers to see where the uid is stored:
(gdb) print $esp
$1 = (void *) 0xbffff710
(gdb) print $ebp
$2 = (void *) 0xbffff728
(gdb) print $eax
$3 = 2013

The UID is stored in the EAX register. We can modify a register's value with set:
set $eax=4242
print $eax to check if the value is modified
step //to continue executing the program
-> we get the flag: 2A31L79asukciNyi8uppkEuSx

End of assembler dump.
(gdb) print $eax
$1 = 1
(gdb) step
Single stepping until exit from function getuid,
which has no line number information.
0x0804859a in main ()
(gdb) print $eax
$2 = 2013
(gdb) set $eax 4242
A syntax error in expression, near `4242'.
(gdb) set $eax=4242
(gdb) print $eax
$3 = 4242
(gdb) step
Single stepping until exit from function main,
which has no line number information.
your token is 2A31L79asukciNyi8uppkEuSx
0xb7e454d3 in __libc_start_main () from /lib/i386-linux-gnu/libc.so.6
(gdb) 

--> su level14
